{"version":3,"sources":["components/Header.js","components/Drop.js","GlobalContext/Context.js","components/InputForm.js","components/OutputCurrency.js","components/Chart.js","App.js","index.js"],"names":["Header","Drop","currency","upVal","list","useState","code","setCode","className","name","id","value","onChange","e","handleChange","target","map","index","class","initial","currencyFrom","currencyTo","amount","rate","flag","chart","GlobalContext","createContext","GlobalProvider","children","state","setState","Provider","InputForm","useContext","setAmount","setRate","setCurrencyFrom","setCurrencyTo","setList","useEffect","fetch","then","res","json","data","Object","keys","rates","onSubmit","preventDefault","values","r","type","OutUnit","OutputCurrency","convertedAmt","setConvertedAmt","toFixed","Chart","labels","setLabels","setRates","Moment","format","subtract","sort","a","b","arr","tempR","i","length","push","date","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointRadius","lineTension","width","height","options","maintainAspectRatio","scales","xAxes","gridLines","show","gridLineWidth","drawOnChartArea","yAxes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b69f18d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return <header>\r\n        <h1>\r\n            Currency Converter\r\n        </h1>\r\n    </header>\r\n    \r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Drop({ currency, upVal, list }) {\r\n  const [code, setCode] = useState(currency);\r\n\r\n  function handleChange(e) {\r\n    setCode(e);\r\n    upVal(e);\r\n  }\r\n\r\n  return (\r\n    <div className=\"select\">\r\n      <select\r\n        name={currency}\r\n        id={currency}\r\n        value={code}\r\n        onChange={(e) => handleChange(e.target.value)}\r\n      >\r\n        {list.map((e, index) => {\r\n          return (\r\n            <option value={e} key={index}>\r\n              {e}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n      <span class=\"focus\"></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Drop;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nconst initial = {\r\n  currencyFrom: \"USD\",\r\n  currencyTo: \"INR\",\r\n  amount: 0,\r\n  rate: 0,\r\n  flag: false,\r\n  chart: true,\r\n};\r\n\r\nexport const GlobalContext = createContext(initial);\r\n\r\nexport function GlobalProvider({ children }) {\r\n  const [state, setState] = useState(initial);\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        setState,\r\n        state,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Drop from \"./Drop\";\r\nimport { GlobalContext } from \"../GlobalContext/Context\";\r\n\r\nlet flag = true;\r\n\r\nfunction InputForm() {\r\n  const { state, setState } = useContext(GlobalContext);\r\n  const [amount, setAmount] = useState(state.amount);\r\n  const [rate, setRate] = useState(state.rate);\r\n  const [currencyFrom, setCurrencyFrom] = useState(state.currencyFrom);\r\n  const [currencyTo, setCurrencyTo] = useState(state.currencyTo);\r\n  const[list, setList]= useState([])\r\n\r\n  function submitForm(e) {\r\n    e.preventDefault();\r\n\r\n    if (flag) {\r\n      fetch(\r\n        `https://api.exchangeratesapi.io/latest?symbols=${currencyTo}&base=${currencyFrom}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setRate(Object.values(data.rates)[0]);\r\n          setState({\r\n            ...state,\r\n            amount,\r\n            rate: Object.values(data.rates)[0],\r\n            currencyFrom,\r\n            currencyTo,\r\n            flag: true,\r\n            chart: true,\r\n          });\r\n        });\r\n      flag = false;\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        amount,\r\n        flag: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    fetch(\"https://api.exchangeratesapi.io/latest\")\r\n    .then(res=> res.json())\r\n    .then(data=>{\r\n      setList(Object.keys(data.rates))\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <form onSubmit={submitForm} id=\"form\">\r\n      <div className=\"currency-selector\">\r\n        <Drop\r\n          currency={currencyFrom}\r\n          list={list}\r\n          upVal={(r) => {\r\n            setCurrencyFrom(r);\r\n            flag = true;\r\n          }}\r\n        />\r\n        <Drop\r\n          currency={currencyTo}\r\n          list={list}\r\n          upVal={(r) => {\r\n            setCurrencyTo(r);\r\n            flag = true;\r\n          }}\r\n        />\r\n      </div>\r\n      <input\r\n        type=\"number\"\r\n        name=\"amount\"\r\n        id=\"amount\"\r\n        value={amount}\r\n        onChange={(e) => setAmount(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Convert</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default InputForm;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../GlobalContext/Context\";\r\n\r\nfunction OutputCurrency() {\r\n  const { state } = useContext(GlobalContext);\r\n  const [convertedAmt, setConvertedAmt] = useState(state.amount * state.rate);\r\n\r\n  // this useEffect fires twice idk why... help\r\n  // btw why does it even fire after the first time?\r\n  useEffect(() => {\r\n    if (state.flag) {\r\n      setConvertedAmt((state.amount * state.rate).toFixed(2));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <section id=\"output-container\">\r\n      <OutUnit currency={state.currencyFrom} amount={state.amount} />\r\n      <OutUnit currency={state.currencyTo} amount={convertedAmt} />\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction OutUnit({ currency, amount }) {\r\n  return (\r\n    <div >\r\n      <h4>{currency}</h4>\r\n      <h2>{amount}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OutputCurrency;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../GlobalContext/Context\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Moment from \"moment\";\r\n\r\nfunction Chart() {\r\n  const { state, setState } = useContext(GlobalContext);\r\n  const [labels, setLabels] = useState([]);\r\n  const [rates, setRates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (state.chart) {\r\n      fetch(\r\n        `https://api.exchangeratesapi.io/history?end_at=${Moment().format(\r\n          \"YYYY-MM-DD\"\r\n        )}&start_at=${Moment()\r\n          .subtract(15, \"days\")\r\n          .format(\"YYYY-MM-DD\")}&symbols=${state.currencyTo}&base=${\r\n          state.currencyFrom\r\n        }`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setLabels(\r\n            Object.keys(data.rates).sort(\r\n              (a, b) =>\r\n                new Moment(a).format(\"YYYYMMDD\") -\r\n                new Moment(b).format(\"YYYYMMDD\")\r\n            )\r\n          );\r\n\r\n          let arr = [];\r\n          let tempR = Object.values(data.rates).map((i) => Object.values(i)[0].toFixed(2));\r\n          for (let i = 0; i < Object.keys(data.rates).length; i++) {\r\n            arr.push({ date: Object.keys(data.rates)[i], rate: tempR[i] });\r\n          }\r\n          arr.sort(\r\n            (a, b) =>\r\n              new Moment(a.date).format(\"YYYYMMDD\") -\r\n              new Moment(b.date).format(\"YYYYMMDD\")\r\n          );\r\n          setRates(arr.map((e) => e.rate));\r\n        });\r\n      setState({\r\n        ...state,\r\n        chart: false,\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <section id=\"chart\">\r\n      <Line\r\n        data={{\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: `${state.currencyFrom} vs ${state.currencyTo}`,\r\n              data: rates,\r\n              backgroundColor: [\"rgba(0,0,0,0.0)\"],\r\n              borderColor: [\"rgba(155,155,155,1\"],\r\n              pointBackgroundColor: \"#f58a07\",\r\n              pointRadius: 5,\r\n              lineTension: 0,\r\n            },\r\n          ],\r\n        }}\r\n        width={450}\r\n        height={300}\r\n        options={{\r\n          maintainAspectRatio:false,\r\n          scales: {\r\n            xAxes: [\r\n              {\r\n                gridLines: {\r\n                  show: false,\r\n                  gridLineWidth: 0,\r\n                  drawOnChartArea: false,\r\n                },\r\n              },\r\n            ],\r\n            yAxes: [\r\n              {\r\n                gridLines: {\r\n                  show: false,\r\n                  gridLineWidth: 0,\r\n                  drawOnChartArea: false,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        }}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport InputForm from \"./components/InputForm\";\nimport OutputCurrency from \"./components/OutputCurrency\";\nimport Chart from \"./components/Chart\";\nimport { GlobalProvider } from \"./GlobalContext/Context\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"container\">\n        <Header />\n        <InputForm />\n        <OutputCurrency />\n        <Chart />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}